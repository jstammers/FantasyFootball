---
title: Player Explorer
format: dashboard
server: shiny
---
```{python}
#| context: setup
from shiny.express import render, ui
from shiny import reactive
from shinywidgets import render_plotly
from utils import load_data
from pathlib import Path
import plotly.express as px
import duckdb
data_dir = Path("data/FBRef_parsed/big5")
db = duckdb.connect(database=':memory:')
all_players, all_teams = load_data(data_dir, db)
```

## {.sidebar}

```{python}
ui.input_select("player", "Player:",
                choices=all_players)
ui.input_select("team", "Team:",
                choices=all_teams)
ui.input_radio_buttons("choice", "Choice:",choices=["Player","Team"])
ui.input_select("table", "Stats:",
                choices=["standard", "shooting", "passing", "defense", "playing_time", "possession", "gca", "keepers", "keepers_adv", "misc"])

def _select_data(choice, player, team, table):
    if choice == "Player":
        key = "Player"
        value = player
        table = f"player_{table}"
    else:
        key = "Squad"
        value = team
        table = f"team_{table}"
    return db.execute(f"SELECT * FROM {table} WHERE {key}='{value}'").fetchdf()

@reactive.calc
def data():
    return _select_data(input.choice(), input.player(), input.team(), input.table())

@reactive.calc
def wages():
    if input.choice() == "Team":
        return db.execute(f"SELECT * FROM wages WHERE Team='{input.team()}' ORDER BY Season").fetchdf()
    else:
        return db.execute(f"SELECT * FROM wages WHERE Player='{input.player()}' ORDER BY Season").fetchdf()
```
# Player

## Stats {.tabset}

```{python}
#| title: Standard

@render.table
def _data():
    return data()
```

# Wages

```{python}
@render_plotly
def _plot_wages():
    df = wages()
    if input.choice() == "Team":
        return px.bar(df, x="Season", y="AnnualWageGBP", color="Player")
    else:
        return px.bar(df, x="Season", y="AnnualWageGBP", color="Team")
```